server:
  port: 7529
  address: 0.0.0.0
  servlet:
    context-path: /api
    session:
      cookie:
        max-age: 604800
spring:
  profiles:
    active: dev
  application:
    name: FrankApiBackend
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/xxxxxxxx
    username: xxxxxxxx
    password: xxxxxxxx
  mvc:
    path match:
      matching-strategy: ANT_PATH_MATCHER
  session:
    timeout: 86400
    store-type: redis
  redis:
    database: 0
    host: xxxxxxxx
    port: 6379
    # password: xxxxxxxx
    timeout: 86400
  #  邮箱配置
  mail:
    host: xxxxxxxx
    username: xxxxxxxx
    password: xxxxxxxx
    emailFrom: xxxxxxxx
    properties:
      mail:
        smtp:
          ssl:
            enable: true
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false  # 是否将数据库中的下划线命名字段自动映射到 Java 对象的驼峰命名字段
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete  # 全局逻辑删除的实体字段名，since 3.3.0
      logic-delete-value: 1         # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0     # 逻辑未删除值（默认为 0）
# FrankAPI-SDK 配置
frank:
  api:
    client:
      host: http://localhost:8090/api
cos:
  client:
    accessKey: xxxxxxxx
    secretKey: xxxxxxxx
    region: xxxxxxxx
    bucket: xxxxxxxx
    cos-host: xxxxxxxx
# 微信支付配置
wx:
  pay:
    appId: xxxxxxxx
    mchId: xxxxxxxx
    apiV3Key: xxxxxxxx
    sandbox: false # 是否沙箱环境
    privateKeyPath: xxxxxxxx
    privateCertPath: xxxxxxxx
    # 本地测试用 ngrok 内网穿透
    notifyUrl: https://beloved-massive-sheepdog.ngrok-free.app/api/order/notify/order
# 支付宝支付配置
alipay:
  appId: xxxxxxxx
  sellerId: xxxxxxxx
  # 是否沙箱环境
  sandbox: true
  # 支付宝网关
  gateway-url: https://openapi-sandbox.dl.alipaydev.com/gateway.do
  # 本地测试用 ngrok 内网穿透
  # notifyUrl: https://beloved-massive-sheepdog.ngrok-free.app/api/order/notify/order
  notifyUrl: https://a863-180-174-204-169.ngrok.io/api/ali-pay/trade/notify
  returnUrl: xxxxxxxx
  # 应用私钥
  private-key: xxxxxxxx
  # 支付宝公钥（对）
  alipay-public-key: xxxxxxxx
  # 接口内容加密秘钥，对称秘钥
  content-key: xxxxxxxx
dubbo:
  application:
    enable-file-cache: false
    name: dubbo-springboot-demo-provider
  protocol:
    name: dubbo
    port: -1
  registry:
    id: nacos-registry
    address: nacos://localhost:8848
encrypt:
  rsa:
    rsa-public-key: xxxxxxxx
    rsa-private-key: xxxxxxxx
  aes:
    key: xxxxxxxx
    keyVI: xxxxxxxx